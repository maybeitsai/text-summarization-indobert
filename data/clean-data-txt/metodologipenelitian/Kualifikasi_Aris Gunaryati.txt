3.1 Gambaran Umum Penelitian
     Motivasi dari Metodologi yang diusulkan adalah membuat suatu metode peramalan yang sesuai dengan data runtun waktu yang ada serta meningkatkan akurasinya dengan tetap memperhatikan efisiensi waktu komputasinya.
     Langkah-langkah yang dilakukan dalam penelitian ini adalah menganalisis data jumlah kasus harian Covid 19 di Jakarta berdasarkan dataset dari situs https://corona.jakarta.go.id tanggal 6 Maret 2020 sampai 30 Juni 2021 sebagai data training dan nanti akan diprediksi untuk tanggal 1 Juli 2021 sampai dengan 31 Juli 2021 sebagai data uji dengan tahapan sebagai berikut :
1. Mempersiapkan data runtun waktu yang akan dianalisis
2. Menganalisis data runtun waktu yang ada menggunakan metode statistika ARIMA
3. Menganalisis data runtun waktu yang ada menggunakan metode Quantum Neural Network
4. Mengembangkan model Hybrid ARIMA-Quantum Neural Network
5. Menentukan model yang cocok untuk setiap variabel
6. Menguji kecocokan masing-masing model
7. Melakukan peramalan dengan menggunakan model yang cocok
8. Melakukan perbandingan tingkat akurasi hasil peramalan dengan tiap model

Untuk mendapatkan model peramalan yang diharapkan sesuai dengan data runtun waktu yang ada, maka perlu dilakukan pendekatan ilmiah yaitu dengan melihat pola data runtun waktu yang ada terlebih dahulu. Dengan melihat pola data awal yang dimiliki maka akan memudahkan dalam memilih model yang sesuai untuk data tersebut. Pendekatan lainnya adalah menggunakan tools untuk menentukan secara otomatis Bentuk model statistik ARIMA yang sesuai dengan runtun waktu yang ada, lalu model tersebut dilatih menggunakan quantum neural network agar diketahui pola-pola data yang	sudah	ada	dan	dapat	diuji	akurasinya.
3.2 Model ARIMA
2. Tahapan Analisis Time Series (ARIMA)
a. Membuat Plot Time Series
Identifikasi asumsi stasioneritas data runtun waktu.
Suatu deret pengamatan dikatakan stasioner apabila proses tidak berubah seiring dengan perubahan waktu
Tidak stasioner dalam mean : jika trend tidak datar (tidak sejajar smbu waktu)
Tidak stasioner dalam varian : jika trend datar atau hampir datar, tetapi data tersebar membangun pola melebar atau menyempit (pola terompet)
Tidak stasioner dalam mean & varians : jika trend tidak datar dan data membentuk pola terompet.
Augmented Dickey- Fuller (Uji Formal untuk Stasioneritas) Hipotesis :
H0 : Terdapat akar unit dan data tidak stasioner (=0)
H1 : Tidak terdapat akar unit dan data stasioner (<0 span="">) Taraf Signifikansi : a = ... %
3.3 Model Neural Network
Dalam buku Jaringan Syaraf Tiruan dan Pemrogramannya Menggunakan MATLAB, Drs. Jong Jek Siang, M.Sc menyebutkan bahwa Jaringan Syaraf Tiruan adalah system pemroses informasi yang memiliki karakteristik mirip dengan jaringan syaraf biologi. Jaringan Syaraf Tiruan dibentuk sebagai generalisasi model matematika dari jaringan syaraf biologi, dengan asumsi bahwa Pemrosesan informasi terjadi pada banyak elemen sederhana (neuron)
a. Sinyal dikirimkan di antara neuron-neuron melalui penghubung-penghubung
b. Penghubung antar neuron memiliki bobot yang akan memperkuat atau memperlemah sinyal
c. Untuk menentukan output, setiap neuron menggunakan fungsi aktivasi (biasanya bukan fungsi linier) yang dikenakan pada jumlahan input yang diterima. Besarnya output ini selanjutnya dibandingkan dengan suatu batas ambang (treshhold)

Jaringan Syaraf Tiruan ditentukan oleh tiga hal :
a. Pola hubungan antar neuron (disebut arsitektur jaringan)
b. Metode untuk menentukan bobot penghubung (disebut metode training/learning algoritma)
c. Fungsi Aktivasi
Pemrosesan informasi dalam Jaringan Syaraf Tiruan dapat disingkat sebagai berikut : Sinyal (baik berupa aksi ataupun potensial) muncul sebagai masukan unit (sinapsis); efek dari tiap sinyal ini dinyatakan sebagai bentuk perkalian dengan sebuah nilai bobot untuk mengindikasikan kekuatan dari sinapsis. Semua sinyal yang diberi pengali bobot ini kemudian dijumlahkan satu sama lain untuk menghasilkan unit aktivasi. Jika aktivasi ini melampaui sebuah batas ambang tertentu maka unit tersebut akan memberikan keluaran dalam bentuk respon terhadap masukan. Unit aktivasi ini kemudian dibandingkan dengan sebuah nilai ambang, dan hasilnya dimasukkan kedalam fungsi transfer (fungsi non-linier) yang akan menghasilkan sebuah keluaran. Secara ringkas proses tersebut dapat digambarkan dalam gambar 3
Aktivasi dari unit masukan diatur dan diteruskan melalui jaring hingga nilai dari keluaran dapat ditentukan. Jaring berperan sebagai fungsi vektor yang mengambil satu vektor pada masukan dan mengeluarkan satu vektor lain pada keluaran. Model Jaringan Syaraf Tiruan dapat memiliki sebuah lapisan bobot, dimana masukan dihubungkan langsung dengan keluaran, atau beberapa lapisan yang didalamnya terdapat beberapa lapisan tersembunyi, karena berada tersembunyi diantara neuron masukan dan keluaran. Jaring syaraf menggunakan unit tersembunyi untuk menghasilkan representasi pola masukan secara internal didalam jaring syaraf. Fungsi transfer (non-linier) yang digunakan dalam tiap neuron (baik dilapisan masukan, keluaran, atau lapisan tersembunyi) dapat berupa fungsi nilai ambang, fungsi linier, fungsi sigmoid, ataupun fungsi gaussian, tergantung dari karakter neuron sesuai keinginan kita. Hal ini dapat dilihat pada gambar 4


3.3.1 Komponen Jaringan Syaraf
      Terdapat beberapa tipe jaringan syaraf, hampir semuanya memiliki komponen-komponen yang sama. Seperti halnya otak manusia, jaringan syaraf juga terdiri atas beberapa neuron dan ada hubungan antar neuron tersebut. Neuron-neuron tersebut akan mentransformasikan informasi yang diterima melalui sambungan keluarnya menuju ke neuron-neuron yang lain. Pada jaringan syaraf, hubungan ini dikenal dengan nama bobot. Informasi tersebut disimpan pada suatu nilai tertentu pada bobot tersebut. Neuron ini sebenarnya mirip dengan sel neuron biologis. Neuron-neuron buatan tersebut bekerja dengan cara yang sama pula dengan neuron biologis. Informasi (disebut dengan: input) akan dikirim ke neuron dengan bobot kedatangan tertentu. Input ini akan diproses oleh suatu fungsi perambatan yang akan menjumlahkan nilai-nilai semua bobot yang datang. Hasil penjumlahan ini kemudian akan dibandingkan dengan suatu nilai ambang (threshold) tertentu melalui fungsi aktivasi setiap neuron. Apabila input tersebut melewati suatu nilai ambang tertentu, maka neuron tersebut akan diaktifkan, tapi kalau tidak, maka neuron tersebut tidak akan diaktifkan. Apabila neuron tersebut diaktifkan, maka neuron tersebut akan mengirimkan output melalui bobot-bobot outputnya kesemua neuron yang berhubungan dengannnya.
      Pada Jaringan syaraf, neuron-neuron akan dikumpulkan dalam lapisan (layer) yang disebut dengan lapisan neuron (neuron layer). Neuron-neuron pada satu lapisan akan dihubungkan dengan lapisan-lapisan sebelum dan sesudahnya (kecuali lapisan input dan lapisan output). Informasi yang diberikan pada jaringan syaraf akan dirambatkan lapisan ke lapisan. Mulai dari lapisan input sampai ke lapisan output melalui lapisan lainnya, yang sering disebut sebagai lapisan tersembunyi (hidden layer).

3.3.2 Arsitektur Jaringan Syaraf
3.3.2.1 Jaringan dengan lapisan tunggal (single layer net)
      Jaringan dengan lapisan tunggal hanya memiliki satu lapisan dengan bobot- bobot terhubung. Jaringan ini hanya menerima input kemudian secara langsung akan mengolahnya menjadi output tanpa harus melalui lapisan tersembunyi.

3.3.3.3  Jaringan dengan banyak lapisan (multilayer net)
      Jaringan dengan banyak lapisan memiliki 1 atau lebih lapisan yang terletak diantara lapisan input dan lapisan output (memiliki 1 atau lebih lapisan tersembunyi). Umumnya, ada lapisan bobot-bobot yang terletak antara 2 lapisan yang bersebelahan. Jaringan dengan banyak lapisan ini dapat menyelesaikan permasalahan yang lebih sulit daripada jaringan dengan lapisan tunggal, tentu saja dengan pembelajaran yang lebih rumit. Namun demikian, pada banyak kasus, pembelajaran pada jaringan dengan banyak lapisan ini lebih sukses dalam menyelesaikan masalah.

3.3.3. Fungsi Aktivasi
      Ada beberapa fungsi aktivasi yang sering digunakan dalam jaringan syaraf tiruan, antara lain :
a. Fungsi Undak Biner (Hard Limit)
      Jaringan dengan lapisan tunggal sering menggunakan fungsi undak (step function) untuk mengkonversikan input dari suatu variabel yang bernilai kontinu ke suatu output biner (0 atau 1)
b. Fungsi undak biner (Threshold)
      Fungsi undak biner dengan menggunakan nilai ambang sering juga disebut dengan fungsi nilai ambang (Threshold) atau fungsi Heaviside.
c. Fungsi Bipolar (Symetric Hard Limit)
      Fungsi bipolar sebenarnya hampir sama dengan fungsi undak biner, hanya saja output yang dihasilkan berupa 1, 0 atau -1
d. Fungsi Bipolar (dengan threshold)
      Fungsi bipolar sebenarnya hampir sama dengan fungsi undak biner dengan threshold. Hanya saja keluaran yang dihaslkan berupa 1, 0, atau -1
e. Fungsi Linear (Identitas)
Fungsi linear memiliki nilai output yang sama dengan nilai inputnya.
f. Fungsi Saturating Linear
      Fungsi ini akan bernilai 0 jika inputnya kurang dari - 1/2, dan akan bernilai 1 jika inputnya lebih dari 1/2. Sedangkan jika nilai input terletak antara -1/2 dan 1/2, maka outputnya akan bernilai sama dengan nilai input ditambah 1/2
g. Fungsi Symetric Saturating Linear
      Fungsi ini akan bernilai -1 jika inputnya kurang dari -1, dan akan bernilai 1 jika inputnya lebih dari 1. Sedangkan jika nilai input terletak antara -1 dan 1, maka outputnya akan bernilai sama dengan nilai inputnya.
h. Fungsi Sigmoid Biner
      Fungsi ini digunakan untuk jaringan syaraf yang dilatih dengan menggunakan metode backpropagation. Fungsi sigmoid biner memiliki nilai pada range 0 sampai 1. Oleh karena itu, fungsi ini sering digunakan untuk jaringan syaraf yang membutuhkan nilai output yang terletak pada interval 0 sampai 1. Namun, fungsi ini bisa juga digunakan oleh jaringan syaraf yang nilai outputnya 0 atau 1.
i. Fungsi Sigmoid Bipolar
      Fungsi sigmoid bipolar hampir sama dengan fungsi sigmoid biner, hanya saja output dari fungsi ini memiliki range antara 1 sampai -1
      Fungsi ni sangat dekat dengan fungsi hyperbolic tangent. Keduanya memiliki range antara -1 sampai 1. Untuk fungsi hyperbolic tangent,

3.4 MODEL HYBRID ARIMA NEURAL NETWORK
      Berdasarkan hasil peramalan model ARIMA, akan dilakukan proses analisis runtun waktu menggunakan metode jaringan syaraf tiruan. Dengan kata lain, output dari peramalan model ARIMA akan menjadi input pada proses pengolahan data menggunakan metode jaringan syaraf tiruan. Kemudian akan ditentukan model jaringan syaraf tiruan yang sesuai dan cocok untuk data runtun waktu tersebut.
Secara matematis, hasil ramalan secara keseluruhan yang diperoleh adalah sebagai berikut :
Zt merupakan hasil peramalan yang merupakan gabungan nilai ramalan dari model ARIMA atau Exponential Smoothing dan nilai ramalan dari model JST.

3.5 MODEL QUANTUM HYBRID ARIMA NEURAL NETWORK
      Ada banyak pendekatan untuk pengembangan model Quantum Arima NN. Model-model ini fokus pada yang berbeda aspek komputasi kuantum dan pemrosesan saraf. Dalam komputasi kuantum, Sebagai unit informasi terkecil, bit kuantum atau qubit adalah sistem kuantum yang menyatakan terletak di ruang Hilbert dua dimensi. Seperti bit dalam klasik komputer, qubit berlabel dan mengekspresikan satu bit informasi: sesuai dengan bit 0 komputer klasik, dan bit 1. Keadaan qubit menyatakan superposisi keadaan yang kohere :
      Di mana dan menentukan probabilitas yang sesuai. Gerbang kuantum yang mencakup karakteristik komputasi kuantum merupakan dasar untuk implementasi fisik dari komputasi kuantum. Himpunan logika universal termasuk dalam logika kuantum. Mirip dengan bit klasik, gerbang dasar dapat membentuk gerbang kuantum bemacam-macam dan menyelesaikan keadaan kuantum dari beberapa logika transformasi. berbasis elemen pada gerbang pergeseran fasa 1 bit dan gerbang kontrol-Tidak 2 bit dalam dinamika kuantum diambil sebagai fungsi aktivasi dalam Jaringan saraf. Untuk memudahkan aplikasi, formulir berikut:
Fungsi kompleks diberikan untuk menyatakan keadaan kuantum:
adalah bilangan imaginer adalah kuantum fase

3.6 Pengukuran Kinerja
3.6.1 Mean Squared Error
      Dalam statistik, Mean Squared Error (MSE) sebuah estimator adalah nilai yang diharapkan dari kuadrat error. Error yang ada menunjukkan seberapa besar perbedaan hasil estimasi dengan nilai yang akan diestimasi. Perbedaan itu terjadi karena adanya keacakan pada data atau karena estimator tidak mengandung informasi yang dapat menghasilkan estimasi yang lebih akurat
3.6.2 Komparasi Hasil Peramalan
      Setelah nilai Mean Squared Error dari kedua metode didapatkan, maka akan dilakukan komparasi terhadap nilai MSE yang didapatkan pada periode testing (out- sample)
Jika nilai MSESTATISTIKA < MSEANN maka metode Statistika memiliki performa lebih baik dibandingkan metode ANN karena memiliki tingkat kesalahan relatif lebih kecil.
Sebaliknya, jika MSESTATISTIKA > MSEANN maka metode Statistika memilki performa lebih buruk dibandingkan metode ANN karena tingkat kesalahan yang dihasilkan relatif lebih besar.
